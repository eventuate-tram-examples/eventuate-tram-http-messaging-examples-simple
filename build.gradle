buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.9.2"
    }
}


apply plugin: 'docker-compose'

subprojects {

    apply plugin: "java"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/eventuateio-oss/eventuate-maven-release"
        }
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }

    dependencies {
        implementation(platform("io.eventuate.platform:eventuate-platform-dependencies:$eventuatePlatformVersion"))
    }
}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion
    environment.put "EVENTUATE_JAVA_BASE_IMAGE_VERSION", eventuateExamplesBaseImageVersion
    environment.put "EVENTUATE_PROXY_SERVICE_IMAGE", eventuateTramMessagingHttpVersion

    mysqlbinlogOnly {
        projectName = null
        startedServices = [ 'mysql']
        useComposeFiles = ["docker-compose-mysql-binlog.yml"]
    }

    mysqlbinlog {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog.yml"]
    }

    mysqlbinlogcdc {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog.yml"]
        startedServices = ["cdc-service", "kafka-proxy"]
    }
}

mysqlbinlogComposeUp.dependsOn(mysqlbinlogComposeBuild)
mysqlbinlogComposeUp.dependsOn(mysqlbinlogOnlyComposeUp)
